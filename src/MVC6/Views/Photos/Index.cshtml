@model MVC6RC1.Controllers.PhotosModel

@{
    ViewBag.Title = "Photos";
}
<link rel="stylesheet" href="/photoswipe/photoswipe.css">
<link href="~/lib/photoswipe/dist/photoswipe.css" rel="stylesheet" />
<!-- Skin CSS file (styling of UI - buttons, caption, etc.)
     In the folder of skin CSS file there are also:
     - .png and .svg icons sprite,
     - preloader.gif (for browsers that do not support CSS animations) -->
<link href="~/lib/photoswipe/dist/default-skin/default-skin.css" rel="stylesheet" />
<!--[if lt IE 9]>
  <script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.2/html5shiv.min.js"></script>
<![endif]-->

<h2>Photos</h2>
<a href="javascript:;" id="reopenGallery" style="display: none">Reopen Gallery</a>

<!-- Required HTML elements. See http://photoswipe.com/documentation/getting-started.html -->
<div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="pswp__bg"></div>
    <div class="pswp__scroll-wrap">
        <div class="pswp__container">
            <div class="pswp__item"></div>
            <div class="pswp__item"></div>
            <div class="pswp__item"></div>
        </div>
        <div class="pswp__ui pswp__ui--hidden">
            <div class="pswp__top-bar">
                <div class="pswp__counter"></div>
                <button class="pswp__button pswp__button--close" title="Close (Esc)"></button>
                <button class="pswp__button pswp__button--share" title="Share"></button>
                <button class="pswp__button pswp__button--fs" title="Toggle fullscreen"></button>
                <button class="pswp__button pswp__button--zoom" title="Zoom in/out"></button>
                <div class="pswp__preloader">
                    <div class="pswp__preloader__icn">
                        <div class="pswp__preloader__cut">
                            <div class="pswp__preloader__donut"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
                <div class="pswp__share-tooltip"></div>
            </div>
            <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)"></button>
            <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)"></button>
            <div class="pswp__caption">
                <div class="pswp__caption__center"></div>
            </div>
        </div>
    </div>
</div>


<script src="~/lib/photoswipe/dist/photoswipe/photoswipe.min.js"></script> <!-- Core JS file -->
<script src="~/lib/photoswipe/dist/photoswipe/photoswipe-ui-default.min.js"></script> <!-- UI JS file -->
<script src="~/js/photoswipeload.js"></script>
<script src="~/js/photoswiperun.js"></script>
<script>
      var onload = function() {
        var flickrApiKey = 'FILL-ME-IN',
            flickrPhotosetId = 'FILL-ME-IN',
            reopenLink = document.getElementById('reopenGallery'), // link to reopen gallery if it is closed
            lastItemIndex, // save what image we were on, reopen at the same image
            galleryOptions = {
              index: 0,
              counterEl: false // no slide counter
            },
            gallerySetup = function(gallery) {
              gallery.listen('close', function() {
                lastItemIndex = gallery.getCurrentIndex();
              });
              gallery.init();
              if (lastItemIndex)
              {
                gallery.goTo(lastItemIndex);
              }
              reopenLink.style.display = '';
            };
        if (flickrApiKey == 'FILL-ME-IN' || flickrPhotosetId == 'FILL-ME-IN')
        {
          alert('You have to fill in your flickr API key and photoset ID for the script to work.');
        }
        else
        {
          photoswipeFlickr(flickrApiKey,flickrPhotosetId, galleryOptions, gallerySetup);
          reopenLink.addEventListener('click', function () { photoswipeFlickr.initGalleryWithCallback(gallerySetup); });
        }
      };
      if (document.readyState != 'loading') {
        onload();
      }
      else {
        document.addEventListener('DOMContentLoaded', onload);
      }
</script>